#!/usr/bin/python3 -u

import json
import ob
import ob.evt
import obot
import os
import sys
import time
import threading

from ob import Object, k, __version__
from ob.csl import Console
from ob.dpt import dispatch
from ob.pst import Persist
from ob.shl import execute, hd, parse_cli, set_completer
from ob.tms import elapsed
from ob.trm import reset
from ob.utl import get_name

ob.evt.aliases = {
           "c": "cmds",
           "cfg": "show cfg",
           "f": "find",
           "l": "log",
           "ps": "show tasks",
           "t": "todo",
           "u": "show uptime",
           "v": "show version"
           }

opts = [
    ('-b', '', 'store_true', False, 'daemon', 'enable daemon mode.'),
    ('-d', '', 'string', "", 'workdir', 'set working directory.'),
    ('-l', '', 'string', '', 'level', 'loglevel.'),
    ('-p', '', 'store_false', True, 'prompting', 'prompt for user input'),
    ('-m', '', 'string', '', 'modules', 'modules to load.'),
    ('-o', '', "string", "", 'options', "options to use."),
    ('-s', '', 'store_true', False, 'dosave', 'save configuration files.'),
    ('-v', '', 'store_true', False, 'verbose', 'enable verbose mode.'),
    ('-z', '', 'store_false', True, 'shell', 'enable shell (default).'),
]

def daemon():
    pid = os.fork()
    if pid != 0:
        reset()
        os._exit(0)
    os.setsid()
    os.umask(0)
    si = open("/dev/null", 'r')
    so = open("/dev/null", 'a+')
    se = open("/dev/null", 'a+')
    os.dup2(si.fileno(), sys.stdin.fileno())
    os.dup2(so.fileno(), sys.stdout.fileno())
    os.dup2(se.fileno(), sys.stderr.fileno())

def main():
    parse_cli("bb", __version__, opts, hd(".ob"), "bb [options]")
    if k.cfg.daemon:
        daemon()
    k.cfg.modules += ",obot.cmds,obot.show,rssbot,bartbot.stats"
    k.init(k.cfg.modules)
    if not k.init("obot.irc"):
        return
    console = Console()
    console.start()
    k.add(console)
    k.start()
    k.wait()

execute(main)
os._exit(0)
